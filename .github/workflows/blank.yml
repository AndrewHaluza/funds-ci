# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  repository_dispatch:
    types: deploy-backend

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  t:
    name: Deploy docker image to server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Execute remote SSH cloudflared tunnel commands (rebuild)
        uses: npgy/cloudflared-ssh-action@v2.0
        with:    
          host: ${{ vars.SSH_IP }}
          username: ${{ vars.SSH_USERNAME }}
          private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ vars.SSH_PORT }}
          commands: |
            export DATABASE_CLIENT=${DATABASE_CLIENT}
            export DATABASE_URL=${DATABASE_URL}
            export DATABASE_HOST=${DATABASE_HOST}
            export DATABASE_PORT=${DATABASE_PORT}
            export DATABASE_NAME=${DATABASE_NAME}
            export DATABASE_USERNAME=${DATABASE_USERNAME}
            export DATABASE_PASSWORD=${DATABASE_PASSWORD}
            export SERVER_PORT=${SERVER_PORT}
            export JWT_SECRET=${JWT_SECRET}
            export TRANSFER_TOKEN_SALT=${TRANSFER_TOKEN_SALT}
            export ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET}
            export API_TOKEN_SALT=${API_TOKEN_SALT}
            export APP_KEYS=${APP_KEYS}
            export PORT=${PORT}
            export HOST=${HOST}
            cd /srv/funds-ci
            docker-compose pull backend
            docker-compose up -d backend
          env:
            DATABASE_CLIENT=${{ vars.DATABASE_CLIENT || 'mysql' }}
            DATABASE_URL=${{ vars.DATABASE_URL }}
            DATABASE_HOST=${{ vars.DATABASE_HOST }}
            DATABASE_PORT=${{ vars.DATABASE_PORT || 3306 }}
            DATABASE_NAME=${{ vars.DATABASE_NAME }}
            DATABASE_USERNAME=${{ vars.DATABASE_USERNAME }}
            DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
            SERVER_PORT=${{ vars.SERVER_PORT }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            TRANSFER_TOKEN_SALT=${{ vars.TRANSFER_TOKEN_SALT }}
            ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }}
            API_TOKEN_SALT=${{ vars.API_TOKEN_SALT }}
            APP_KEYS=${{ vars.APP_KEYS }}
            PORT=${{ vars.PORT || 1337 }}
            HOST=${{ vars.HOST || '0.0.0.0' }}
