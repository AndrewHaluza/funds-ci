# This is a basic workflow to help you get started with Actions

name: Test

# Controls when the workflow will run
on:
  repository_dispatch:
    types: deploy-backend

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  t:
    name: Deploy docker image to server
    runs-on: ubuntu-latest
    steps:    

      - name: Execute remote SSH cloudflared tunnel commands (rebuild)
        uses: npgy/cloudflared-ssh-action@v2.0
        with:    
          host: ${{ vars.SSH_IP }}
          username: ${{ vars.SSH_USERNAME }}
          private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ vars.SSH_PORT }}
          commands: |
            export DATABASE_CLIENT='${{ vars.DATABASE_CLIENT }}'
            export DATABASE_URL='${{ vars.DATABASE_URL }}'
            export DATABASE_HOST='${{ vars.DATABASE_HOST }}'
            export DATABASE_PORT='${{ vars.DATABASE_PORT }}'
            export DATABASE_NAME='${{ vars.DATABASE_NAME }}'
            export DATABASE_USERNAME='${{ vars.DATABASE_USERNAME }}'
            export SERVER_PORT='${{ vars.SERVER_PORT }}'
            export TRANSFER_TOKEN_SALT='${{ vars.TRANSFER_TOKEN_SALT }}'
            export API_TOKEN_SALT='${{ vars.API_TOKEN_SALT }}'
            export APP_KEYS='${{ vars.APP_KEYS }}'
            export PORT='${{ vars.PORT }}'
            export HOST='${{ vars.HOST }}'
            export DATABASE_PASSWORD='${{ secrets.DATABASE_PASSWORD }}'
            export JWT_SECRET='${{ secrets.JWT_SECRET }}'
            export ADMIN_JWT_SECRET='${{ secrets.ADMIN_JWT_SECRET }}'

            cd /srv/funds-ci
            git pull
            docker-compose pull backend
            docker-compose up -d backend
